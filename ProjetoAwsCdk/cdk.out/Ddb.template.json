{
 "Resources": {
  "ProdutoEventsDdb5A8A1D0A": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "pk",
      "AttributeType": "S"
     },
     {
      "AttributeName": "sk",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "pk",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "sk",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 1,
     "WriteCapacityUnits": 1
    },
    "TableName": "produto-events",
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Ddb/ProdutoEventsDdb/Resource"
   }
  },
  "ProdutoEventsDdbReadScalingTarget2098E34F": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 4,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "table/",
       {
        "Ref": "ProdutoEventsDdb5A8A1D0A"
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
      ]
     ]
    },
    "ScalableDimension": "dynamodb:table:ReadCapacityUnits",
    "ServiceNamespace": "dynamodb"
   },
   "Metadata": {
    "aws:cdk:path": "Ddb/ProdutoEventsDdb/ReadScaling/Target/Resource"
   }
  },
  "ProdutoEventsDdbReadScalingTargetTracking01D9A304": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "DdbProdutoEventsDdbReadScalingTargetTracking9F51BD64",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "ProdutoEventsDdbReadScalingTarget2098E34F"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
     },
     "ScaleInCooldown": 30,
     "ScaleOutCooldown": 30,
     "TargetValue": 50
    }
   },
   "Metadata": {
    "aws:cdk:path": "Ddb/ProdutoEventsDdb/ReadScaling/Target/Tracking/Resource"
   }
  },
  "ProdutoEventsDdbWriteScalingTarget2DF4163C": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 4,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "table/",
       {
        "Ref": "ProdutoEventsDdb5A8A1D0A"
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
      ]
     ]
    },
    "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
    "ServiceNamespace": "dynamodb"
   },
   "Metadata": {
    "aws:cdk:path": "Ddb/ProdutoEventsDdb/WriteScaling/Target/Resource"
   }
  },
  "ProdutoEventsDdbWriteScalingTargetTracking49DACCCD": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "DdbProdutoEventsDdbWriteScalingTargetTracking37666765",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "ProdutoEventsDdbWriteScalingTarget2DF4163C"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
     },
     "ScaleInCooldown": 30,
     "ScaleOutCooldown": 30,
     "TargetValue": 50
    }
   },
   "Metadata": {
    "aws:cdk:path": "Ddb/ProdutoEventsDdb/WriteScaling/Target/Tracking/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12OywqDMBREv8V9TK2lH9C666qo+3LzqNwaE8mjIiH/XlQspasZDodhSno8F7TIYHI5F32ukNHYeOA9gck9opg1DEYwGltgSpLqqdeSCIyjQg4ejYbgjeOgUHc0XsHJhoNarIv3FlnwkuykBdtJv8z8kS1aC7xH3TXb2t0o5PNuf0FKpJbOBMvXQ7+9Mlrg8imRG7zhUJ5oQY/ZyyHmNmiPg6T1lh/KUthC+wAAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "Ddb/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Outputs": {
  "ExportsOutputFnGetAttProdutoEventsDdb5A8A1D0AArn5EC5CAAF": {
   "Value": {
    "Fn::GetAtt": [
     "ProdutoEventsDdb5A8A1D0A",
     "Arn"
    ]
   },
   "Export": {
    "Name": "Ddb:ExportsOutputFnGetAttProdutoEventsDdb5A8A1D0AArn5EC5CAAF"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}